@use 'sass:color';
@use 'utils';

@mixin styles($color: null, $theme: light, $height: null, $padding: null, $mobile: 600px, $transition: .3s .25s) {
    // color
    $bg-color: utils.nth-or($color, 1);
    $text-color: utils.nth-or($color, 2);

    $fallback-color: black;
    @if utils.is-color($bg-color) and utils.is-color($text-color) and color.lightness($bg-color) < color.lightness($text-color)
    or utils.is-color($bg-color) and color.lightness($bg-color) < 50%
    or utils.is-color($text-color) and color.lightness($text-color) > 50%
    or $theme == dark {
        $fallback-color: white;
    }

    $mix-color: utils.is-color($text-color) and $text-color or $fallback-color;
    $bg-color-dark: rgba($mix-color, 0.16);
    @if utils.is-color($bg-color) {
        $bg-color-dark: mix($mix-color, $bg-color, 16%);
    }

    // transitions
    $t-dropdown: utils.nth-or($transition, 1, .3s);
    $t-link: utils.nth-or($transition, 2, $t-dropdown);

    position: relative;
    width: 100%;
    height: $height;
    text-align: left;
    color: $text-color;
    background-color: $bg-color;

    &, & * {
        box-sizing: border-box;
    }

    & a {
        text-decoration: none;
        color: $text-color or inherit;
        fill: $text-color or inherit;
    }

    &__nav {
        width: 100%;
        height: 100%;
        margin: 0;
        background-color: inherit;

        @media screen and (min-width: utils.plus-one($mobile)) {
            @include utils.flex-row();
        }
    }

    &__mobile {
        @include utils.flex-row();
        height: 100%;
    }

    &__logo {
        @include utils.flex-row(center);
        margin-right: auto;
        height: 100%;

        &-img {
            display: block;
            height: 100%;
        }
    }

    &__mobile-buttons {
        @include utils.flex-row(center);
        margin-left: auto;
        height: 100%;

        @media screen and (min-width: $mobile) {
            display: none;
        }
    }

    &__mobile-button {
        @include utils.flex-row(center);

        & svg {
            height: 1.2em;
        }
    }

    &__nav:target &__mobile-button--open {
        display: none;
    }

    &__nav:not(:target) &__mobile-button--close {
        display: none;
    }


    &__links { // data-menu-links
        margin-left: auto;
        height: 100%;
        background-color: $bg-color or inherit;
        overflow: hidden;
        transition-duration: $t-dropdown; // should change based on js or pure css
        transition-property: max-height;
        transition-timing-function: ease-out;

        @media screen and (max-width: $mobile) { // originally applied to [data-menu-links]
            position: absolute;
            left: 0; top: 100%;
            width: 100%;
            height: auto;
            max-height: 0;

            & > * {
                width: 100%;
                margin-bottom: 2px;
            }
        }

        @media screen and (min-width: utils.plus-one($mobile)) {
            @include utils.flex-row();
            overflow: visible;
        }
    }

    &__nav:target &__links--target {
        max-height: 100vw
    }

    &__link-container {
        position: relative;
        background-color: inherit;
    }

    &__dropdown {
        min-width: 100%;
        background-color: inherit;

        @media screen and (min-width: utils.plus-one($mobile)) {
            position: absolute;
            top: 100%;
            left: 0;
        }
    }

    @media screen and (min-width: utils.plus-one($mobile)) {
        &__link-container:not(:hover) &__dropdown {
            display: none;
        }
    }

    &__link { // data-menu-link
        display: block;
        height: 100%;
        white-space: nowrap;
        background-color: $bg-color;
        transition-property: background-color;
        transition-duration: $t-link; // different variable for link transitions

        @media screen and (min-width: $mobile + 1) {
            @include utils.flex-row(center);
            cursor: pointer;
        }

        &:hover, &-container:hover &--dropdown {
            background-color: $bg-color-dark;
        }

        @media screen and (max-width: $mobile) {
            height: auto;
            background-color: $bg-color-dark;

            &:hover {
                background-color: mix($mix-color, $bg-color-dark, 16%);
            }
        }

        &--sub-link {
            height: $height;
        }
    }
}
